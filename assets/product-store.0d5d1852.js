import{aj as p,r as s,t as n,S as l,ak as e}from"./index.4d6c05eb.js";const g=p("ProductStore",()=>{const d=s(),o=s([]),u=n(()=>Object.entries(o.value.reduce((r,t)=>{for(const c of t.tags||[])r[c]=(r[c]||0)+1;return r},{})).sort((r,t)=>t[1]-r[1]).map(([r,t])=>l({name:r,isSelected:!1,nbOccurrence:t}))),i=n(()=>Array.from(new Set(o.value.flatMap(r=>{var t;return((t=r.prices)==null?void 0:t.map(c=>c.storeId))||[]})))),a=async()=>{try{const r=await e.get("product");o.value=r.data}catch(r){console.error("Error fetching Products:",r)}};return{products:o,tags:u,stores:i,profile:d,fetchProducts:a,createProduct:async r=>{try{await e.post("product",r),await a()}catch(t){console.error("Error creating Product:",t)}},updateProduct:async r=>{try{if(r.id){const t=encodeURIComponent(r.id);await e.put(`product/${t}`,r)}else await e.post("product",r);return await a(),!0}catch(t){return console.error("Error when editing a product:",t),!1}},deleteProduct:async r=>{try{return await e.delete(`product/${r.id}`),!0}catch(t){return console.error("Error deleting Product:",t),!1}}}});export{g as u};
